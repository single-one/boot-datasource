<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springboot.datasource.dao.UserInfoMapper">
    <resultMap id="BaseResultMap" type="com.springboot.datasource.entity.UserInfo">
        <id column="id" property="id" javaType="String" jdbcType="VARCHAR" />
        <result column="govCode" property="govCode" javaType="String" jdbcType="VARCHAR" />
        <result column="userName" property="userName" javaType="String" jdbcType="VARCHAR" />
        <result column="userCode" property="userCode" javaType="String" jdbcType="VARCHAR" />
        <result column="userPwd" property="userPwd" javaType="String" jdbcType="VARCHAR" />
        <result column="createTime" property="createTime" javaType="Date" jdbcType="TIMESTAMP" />
        <result column="updateTime" property="updateTime" javaType="Date" jdbcType="TIMESTAMP" />
    </resultMap>
    
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                      <foreach collection="criteria.criteria" item="criterion">
                          <choose>
                              <when test="criteria.noValue">
                                  and ${criterion.condition}
                              </when>
                              <when test="criterion.singleValue">
                                  and ${criterion.condition} #{criterion.value}
                              </when>
                              <when test="criterion.betweenValue">
                                  and ${criterion.condition} #{criterion.value} and #{criterion.sencondValue}
                              </when>
                              <when test="criterion.listValue">
                                  and ${criterion.condition}
                                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
                                    #{listItem}
                                  </foreach>
                              </when>
                          </choose>
                      </foreach>
                    </trim>
                </if>
            </foreach>
            
        </where>

    </sql>

    <sql id="BaseSQL">
      a.id as "id",
      a.gov_code as "govCode",
      a.user_name as "userName",
      a.user_code as "userCode",
      a.user_pwd as "userPwd",
      a.create_time as "createTime",
      a.update_time as "updateTime"
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.springboot.datasource.entity.UserInfoExample">
        select 
            <if test="distinct">
                distinct
            </if>
            'true' as QUERYID,
        <include refid="BaseSQL" />
        from user_info a
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="BaseSQL" />
        from user_info a
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from user_info
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.springboot.datasource.entity.UserInfoExample" useGeneratedKeys="true" keyProperty="id">
        insert into user_info (id, gov_code, user_name,
                               user_code, user_pwd, create_time,
                               update_time)
        values (#{id,jdbcType=VARCHAR}, #{govCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
                #{userCode,jdbcType=VARCHAR}, #{userPwd,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="com.springboot.datasource.entity.UserInfoExample" useGeneratedKeys="true" keyProperty="id">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="govCode != null" >
                gov_code,
            </if>
            <if test="userName != null" >
                user_name,
            </if>
            <if test="userCode != null" >
                user_code,
            </if>
            <if test="userPwd != null" >
                user_pwd,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="govCode != null" >
                #{govCode,jdbcType=VARCHAR},
            </if>
            <if test="userName != null" >
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userCode != null" >
                #{userCode,jdbcType=VARCHAR},
            </if>
            <if test="user_pwd != null" >
                #{userPwd,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.springboot.datasource.entity.UserInfoExample" resultType="java.lang.String" >
        select count(*) from user_info a
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <!-- 通过用户编号删除 -->
    <delete id="deleteByUserCode" parameterType="java.lang.String" >
        delete from user_info
        where user_code = #{userCode,jdbcType=VARCHAR}
    </delete>
    <!-- 通过机构ID删除 -->
    <delete id="deleteByGovCode" parameterType="java.lang.String" >
        delete from user_info
        where gov_code = #{govCode,jdbcType=VARCHAR}
    </delete>
</mapper>